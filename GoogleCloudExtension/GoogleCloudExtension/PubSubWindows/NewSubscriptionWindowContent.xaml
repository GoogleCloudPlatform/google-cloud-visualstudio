<UserControl
    x:Class="GoogleCloudExtension.PubSubWindows.NewSubscriptionWindowContent"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ext="clr-namespace:GoogleCloudExtension"
    xmlns:local="clr-namespace:GoogleCloudExtension.PubSubWindows"
    xmlns:theming="clr-namespace:GoogleCloudExtension.Theming"
    xmlns:controls="clr-namespace:GoogleCloudExtension.Controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:utils="clr-namespace:GoogleCloudExtension.Utils;assembly=GoogleCloudExtension.Utils"
    mc:Ignorable="d"
    d:DataContext="{d:DesignInstance Type=local:NewSubscriptionViewModel}"
    FocusManager.FocusedElement="{Binding ElementName=SubscriptionName}">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Theming/CommonResources.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <Style x:Key="MyTextBlock" BasedOn="{StaticResource CommonTextStyle}" TargetType="{x:Type TextBlock}">
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Margin" Value="3"/>
            </Style>
            <Style x:Key="MyLabel" BasedOn="{StaticResource CommonLabelStyle}" TargetType="{x:Type Label}">
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Margin" Value="3"/>
            </Style>
            <Style
                x:Key="MyLabelWithHelp"
                BasedOn="{StaticResource {x:Type controls:LabelWithHelp}}"
                TargetType="{x:Type controls:LabelWithHelp}">

                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Margin" Value="3"/>
            </Style>
            <Style x:Key="MyTextBox" BasedOn="{StaticResource CommonTextBoxStyle}" TargetType="{x:Type TextBox}">
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Margin" Value="3"/>
            </Style>
            <Style
                x:Key="MyRadioButton"
                BasedOn="{StaticResource LabeledRadioButtonStyle}"
                TargetType="{x:Type RadioButton}">

                <Style.Resources>
                    <Style BasedOn="{StaticResource MyLabel}" TargetType="{x:Type Label}"/>
                </Style.Resources>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Margin" Value="3"/>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <UserControl.Style>
        <Binding Source="{StaticResource CommonDialogStyleLarge}"/>
    </UserControl.Style>

    <theming:CommonDialogWindowBaseContent HasBanner="True">
        <theming:CommonDialogWindowBaseContent.Buttons>
            <theming:DialogButtonInfo
                Caption="{x:Static ext:Resources.UiOkButtonCaption}"
                Command="{Binding CreateCommand}"
                IsEnabled="{Binding HasErrors, Converter={utils:BooleanConverter TrueValue=False, FalseValue=True}}"
                IsDefault="True"/>
            <theming:DialogButtonInfo
                Caption="{x:Static ext:Resources.UiCancelButtonCaption}"
                IsCancel="True"/>
        </theming:CommonDialogWindowBaseContent.Buttons>

        <StackPanel
            HorizontalAlignment="Stretch"
            VerticalAlignment="Top">

            <DockPanel>
                <Label
                    DockPanel.Dock="Left"
                    Target="{Binding ElementName=SubscriptionName}"
                    Content="{x:Static ext:Resources.NewSubscriptionWindowNameLabel}"
                    Style="{StaticResource MyLabel}"/>
                <TextBox
                    x:Name="SubscriptionName"
                    Style="{StaticResource MyTextBox}">
                    <TextBox.Text>
                        <Binding
                            Path="SubscriptionName"
                            UpdateSourceTrigger="PropertyChanged"
                            ValidatesOnNotifyDataErrors="True" />
                    </TextBox.Text>
                </TextBox>
            </DockPanel>
            <TextBlock
                Text="{x:Static ext:Resources.NewSubscriptionWindowDeliveryType}"
                Style="{StaticResource MyTextBlock}"/>
            <RadioButton
                GroupName="PushPull"
                IsChecked="True"
                Content="{x:Static ext:Resources.NewSubscriptionWindowPullLabel}"
                Style="{StaticResource MyRadioButton}"/>
            <DockPanel>
                <RadioButton
                    DockPanel.Dock="Left"
                    GroupName="PushPull"
                    IsChecked="{Binding Push}"
                    Content="{x:Static ext:Resources.NewSubscriptionWindowPushLabel}"
                    Style="{StaticResource MyRadioButton}"/>
                <TextBox
                    Text="{Binding PushConfig.PushEndpoint, UpdateSourceTrigger=PropertyChanged}"
                    IsEnabled="{Binding Push}"
                    Style="{StaticResource MyTextBox}"/>
            </DockPanel>
            <DockPanel>
                <controls:LabelWithHelp
                    DockPanel.Dock="Left"
                    Target="{Binding ElementName=Deadline}"
                    Content="{x:Static ext:Resources.NewSubscriptionWindowAckDeadlineLabel}"
                    HelpContent="{x:Static ext:Resources.NewSubscriptionWindowAckDeadlineTooltip}"
                    Style="{StaticResource MyLabelWithHelp}"/>
                <TextBox
                    x:Name ="Deadline"
                    Style="{StaticResource MyTextBox}">
                    <TextBox.Text>
                        <Binding
                            Path="Subscription.AckDeadlineSeconds"
                            TargetNullValue="60"
                            UpdateSourceTrigger="PropertyChanged" />
                    </TextBox.Text>
                </TextBox>
            </DockPanel>
        </StackPanel>
    </theming:CommonDialogWindowBaseContent>
</UserControl>

