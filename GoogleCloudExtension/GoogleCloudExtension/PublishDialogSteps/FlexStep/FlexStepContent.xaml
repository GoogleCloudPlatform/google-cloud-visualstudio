<UserControl x:Class="GoogleCloudExtension.PublishDialogSteps.FlexStep.FlexStepContent"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:GoogleCloudExtension.PublishDialogSteps.FlexStep"
             xmlns:ext="clr-namespace:GoogleCloudExtension"
             xmlns:controls="clr-namespace:GoogleCloudExtension.Controls"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300"
             d:DataContext="{d:DesignInstance local:FlexStepViewModel}">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../../Theming/CommonResources.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <StackPanel>
        <DockPanel HorizontalAlignment="Left">
            <Label
                DockPanel.Dock="Top"
                Content="{x:Static ext:Resources.PublishDialogGcpProjectIdLabel}"
                Style="{StaticResource CommonLabelStyle}"/>
            <Button
                DockPanel.Dock="Right"
                Content="{x:Static ext:Resources.PublishDialogSelectGcpProjectButtonLabel}"
                Style="{StaticResource CommonButtonDynamicStyle}"
                Command="{Binding SelectProjectCommand}"/>
            <TextBox
                Text="{Binding GcpProjectId, Mode=OneWay}"
                Width="200"
                Margin="0,0,5,0"
                IsReadOnly="True"
                Style="{StaticResource CommonTextBoxStyle}"/>
        </DockPanel>

        <ContentControl Margin="0,5,0,0">
            <ContentControl.Resources>
                <!-- The information to deploy to flex. -->
                <StackPanel x:Key="InputControls">
                    <Label Content="{x:Static ext:Resources.PublishDialogFlexVersionNameCaption}"
                           Target="{Binding ElementName=_version}"
                           Style="{StaticResource CommonLabelStyle}"/>
                    <TextBox x:Name="_version"
                             Text="{Binding Version, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}"
                             Style="{StaticResource CommonTextBoxStyle}"/>

                    <CheckBox IsChecked="{Binding Promote, Mode=TwoWay}"
                              Margin="0,5,0,0"
                              Content="{x:Static ext:Resources.PublishDialogFlexPromoteVersionCaption}"
                              Style="{StaticResource CommonTextStyleBase}"/>
                    <CheckBox IsChecked="{Binding OpenWebsite, Mode=TwoWay}"
                              Margin="0,5,0,0"
                              Content="{x:Static ext:Resources.PublishDialogOpenWebsiteCaption}"
                              Style="{StaticResource CommonTextStyleBase}"/>
                </StackPanel>

                <!-- The message that the project is being loaded. -->
                <StackPanel x:Key="LoadingProject" Orientation="Horizontal">
                    <controls:ProgressIndicator />
                    <TextBlock Text="{x:Static ext:Resources.PublishDialogLoadingProjectMessage}"
                               Style="{StaticResource CommonTextStyle}" />
                </StackPanel>

                <!-- Message shown when the API needs to be enabled. -->
                <TextBlock x:Key="NeedsApiEnabled"
                           TextWrapping="Wrap"
                           Style="{StaticResource CommonTextStyle}">
                    <TextBlock Text="{x:Static ext:Resources.PublishDialogProjectNeedsApiMessage}" TextWrapping="Wrap"/>
                    <Hyperlink Style="{StaticResource CommonHyperlinkStyle}"
                               Command="{Binding EnableApiCommand}">
                        <TextBlock Text="{x:Static ext:Resources.PublishDialogEnableApiCaption}" />
                    </Hyperlink>
                </TextBlock>

                <!-- Message shown when the app needs to be created. -->
                <TextBlock x:Key="NeedsAppCreated"
                           TextWrapping="Wrap"
                           Style="{StaticResource CommonTextStyle}">
                    <TextBlock Text="{x:Static ext:Resources.PublishDialogFlexNeedToSetRegionMessage}"
                               TextWrapping="Wrap" />
                    <Hyperlink Style="{StaticResource CommonHyperlinkStyle}"
                               Command="{Binding SetAppRegionCommand}">
                        <TextBlock Text="{x:Static ext:Resources.PublishDialogFlexSetAppRegionCaption}" />
                    </Hyperlink>
                </TextBlock>

                <!-- Message shwon when there is a general error. -->
                <TextBlock x:Key="Error"
                           TextWrapping="Wrap"
                           Text="{x:Static ext:Resources.PublishDialogProjectLoadErrorMessage}"
                           Style="{StaticResource CommonTextStyle}" />
            </ContentControl.Resources>
            <ContentControl.Style>
                <Style TargetType="ContentControl">
                    <!-- Use this setter to change the content visible in the designer -->
                    <Setter Property="Content" Value="{StaticResource InputControls}"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ShowInputControls}">
                            <Setter Property="Content" Value="{StaticResource InputControls}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding LoadingProject}">
                            <Setter Property="Content" Value="{StaticResource LoadingProject}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding NeedsApiEnabled}">
                            <Setter Property="Content" Value="{StaticResource NeedsApiEnabled}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding NeedsAppCreated}">
                            <Setter Property="Content" Value="{StaticResource NeedsAppCreated}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding GeneralError}">
                            <Setter Property="Content" Value="{StaticResource Error}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ContentControl.Style>
        </ContentControl>
    </StackPanel>
</UserControl>
