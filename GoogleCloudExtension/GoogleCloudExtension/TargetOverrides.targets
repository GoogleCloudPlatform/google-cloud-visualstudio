<?xml version="1.0" encoding="utf-8" ?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  
  <Target Name="DeployVsixExtensionFiles" Condition="'$(DeployExtension)'=='true' and '$(CreateVsixContainer)'=='true'" DependsOnTargets="$(DeployVsixExtensionFilesDependsOn)">
    <UninstallExtension Condition="'$(ExistingDeploymentPath)' != '' AND '$(AllUsersExtension)' != 'true'" VsixIdentifier="$(VsixID)" RootSuffix="$(VSSDKTargetPlatformRegRootSuffix)" FailIfNotInstalled="false" />
    
    <Message Condition="Exists($(ExistingDeploymentPath))" Text="ExistingDeploymentPath exists: $(ExistingDeploymentPath)"/>
    <Message Condition="!Exists($(ExistingDeploymentPath))" Text="ExistingDeploymentPath does not exist: $(ExistingDeploymentPath)"/>

    <RemoveDir Condition="'$(ExistingDeploymentPath)' != '' AND '$(AllUsersExtension)' != 'true'" Directories="$([System.IO.Path]::GetDirectoryName($(ExistingDeploymentPath)))">
      <Output TaskParameter="RemovedDirectories" PropertyName="RemovedDirectories"/>
    </RemoveDir>
    
    <Message Text="Removed $(RemovedDirectories)"/>
    <Message Text="VsixID = $(VsixID)" />
    <Message Text="VsixVersion = $(VsixVersion)" />
    <Message Condition="Exists($(ExistingDeploymentPath))" Text="ExistingDeploymentPath exists: $(ExistingDeploymentPath)"/>
    <Message Condition="!Exists($(ExistingDeploymentPath))" Text="ExistingDeploymentPath does not exist: $(ExistingDeploymentPath)"/>

    <InstallVsix VisualStudioVersion="$(VisualStudioVersion)" VsInstallRoot="$(VsInstallRoot)" VsixPath="$(TargetVsixContainer)" PerMachine="$(PerMachine)" RootSuffix="$(RootSuffix)" MessageImportance="$(MessageImportance)" />
    <!--Check if the user is an administrator and the user profile hasn't been setup for the target instance. -->
    <CheckProfileSetup RootSuffix="$(VSSDKTargetPlatformRegRootSuffix)">
      <Output TaskParameter="IsAdministrator" PropertyName="IsCurrentUserAdministrator" />
      <Output TaskParameter="IsProfileSetup" PropertyName="IsTargetProfileSetup" />
    </CheckProfileSetup>
    <!--Run devenv to setup the target profile if necessary -->
    <Message Condition="'$(IsCurrentUserAdministrator)'=='True' And '$(IsTargetProfileSetup)'=='False'" Importance="High" Text="Setting up Visual Studio for debugging extensions. This one-time operation may take a minute or more."/>
    <Devenv Condition="'$(IsCurrentUserAdministrator)'=='True' And '$(IsTargetProfileSetup)'=='False'" RootSuffix="$(VSSDKTargetPlatformRegRootSuffix)" ResetSettingProfile="General.vssettings" IsEmbedded="true" />
    <!--Enable always loading extensions from LocalAppData -->
    <EnableLoadingAllExtensions RootSuffix="$(VSSDKTargetPlatformRegRootSuffix)" />
    <!--Enable this extension via Extension Manager-->
    <EnableExtension Condition="$(VisualStudioVersion) == '15.0'" VsixIdentifier="$(VsixID)" RootSuffix="$(VSSDKTargetPlatformRegRootSuffix)" FailIfNotInstalled="true" VsixVersion="$(VsixVersion)"/>
    <EnableExtension Condition="$(VisualStudioVersion) != '15.0'" VsixIdentifier="$(VsixID)" RootSuffix="$(VSSDKTargetPlatformRegRootSuffix)" FailIfNotInstalled="true"/>
  </Target>
</Project>
